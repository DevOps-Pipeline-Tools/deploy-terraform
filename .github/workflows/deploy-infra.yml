name: Terraform AWS Workflow
on:
  push:
    branches: [ main ]
    paths: 
      - 'joo/terraform/**'
      - '.github/workflows/deploy-infra.yml'
  pull_request:
    branches: [ main ]
    paths: 
      - 'joo/terraform/**'
      - '.github/workflows/deploy-infra.yml'

jobs:
  tf_code_check: 
    permissions: 
      id-token: write
      contents: read
      pull-requests: write
    environment: joo
    defaults:
      run:
        working-directory: ./joo/terraform
    runs-on: ubuntu-latest
    steps:
    - name: Checkout tf code in runner environment 
      uses: actions/checkout@v4

    - name: Configure AWS Credentials Action For GitHub Actions
      uses: aws-actions/configure-aws-credentials@v4
      with: 
        role-to-assume: ${{ secrets.AWS_ROLE }}
        aws-region: ap-northeast-2
        
    - name: Setup Terraform CLI
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: "1.6.2"

    - name: Terraform init
      id: init
      run: terraform init

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform plan output
      id: plan
      if: github.event_name == 'pull_request'
      run: |
        terraform plan -out tfplan.binary
        terraform show -json tfplan.binary > plan.json

    - name: Convert Encoding
      run: |
        iconv -f utf-8 -t utf-8 plan.json > plan-utf8.json
        file -bi plan-utf8.json

    - name: Setup Infracost
      uses: infracost/actions/setup@v2
      with:
        api-key: ${{ secrets.INFRACOST_API_KEY }}

    - name: Generate Infracost cost estimate
      id: infracost
      run: 
        infracost breakdown --path=plan-utf8.json

    - name: Post Infracost comment
      run: |
          infracost comment github --path=plan-utf8.json \
                                    --repo=$GITHUB_REPOSITORY \
                                    --github-token=${{github.token}} \
                                    --pull-request=${{github.event.pull_request.number}} \
                                    --behavior=update

    - name: Install terraform-plan-summary
      run: |
        curl -LO https://github.com/dineshba/tf-summarize/releases/download/v0.3.6/tf-summarize_linux_amd64.tar.gz
        tar -xvf tf-summarize_linux_amd64.tar.gz
        cp tf-summarize /usr/local/bin/
    - name: summary in tree format
      id: summary
      run: cat plan-utf8.json | tf-summarize -tree
      
    - name: PR Comment
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        INFRACOST: "infracost\n${{ steps.infracost.outputs.stdout }}"
        SUMMARY: "tf-summary\n${{ steps.summary.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
         const output = `## 테라폼 구축 계획
          #### terraform init ⚙️\`${{ steps.init.outcome }}\`
          #### terraform fmt 🖌\`${{ steps.fmt.outcome }}\`
          #### terraform validate 🤖\`${{ steps.validate.outcome }}\`
          <details><summary>문법 검사 결과</summary>
          \`\`\`\n
          ${{ steps.validate.outputs.stdout }}
          \`\`\`
          </details>
          #### terraform plan 📖\`${{ steps.plan.outcome }}\`
          <details><summary>테라폼 구축 계획</summary>
          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`
          </details>
          #### tf-summarize 📑\`${{ steps.summary.outcome }}\`
          <details><summary>생성 리소스</summary>
          \`\`\`\n
          ${process.env.SUMMARY}
          \`\`\`
          </details>
          #### infracost breakdown 💎\`${{ steps.infracost.outcome }}\`
          <details><summary>예상 비용</summary>
          \`\`\`\n
          ${process.env.INFRACOST}
          \`\`\`
          </details>
          **위의 내용으로 테라폼 배포를 요청합니다!**
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
    - name: Terraform Apply
      if: github.event_name == 'push'
      run: terraform apply -auto-approve